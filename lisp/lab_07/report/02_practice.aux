\relax 
\@writefile{toc}{\contentsline {chapter}{\numberline {1}Практические задания}{2}{}\protected@file@percent }
\@writefile{lof}{\addvspace {10\p@ }}
\@writefile{lot}{\addvspace {10\p@ }}
\@writefile{toc}{\contentsline {section}{\numberline {1.1}Написать хвостовую рекурсивную функцию my-reverse, которая развернет верхний уровень своего списка-аргумента lst.}{2}{}\protected@file@percent }
\@writefile{lol}{\contentsline {lstlisting}{\numberline {1.1}Задание 1}{2}{}\protected@file@percent }
\@writefile{toc}{\contentsline {section}{\numberline {1.2}Написать функцию, которая возвращает первый элемент списка-аргумента, который сам является непустым списком.}{2}{}\protected@file@percent }
\@writefile{lol}{\contentsline {lstlisting}{\numberline {1.2}Задание 2}{2}{}\protected@file@percent }
\@writefile{toc}{\contentsline {section}{\numberline {1.3}Написать функцию, которая выбирает из заданного списка только те числа, которые больше 1 и меньше 10.}{3}{}\protected@file@percent }
\@writefile{lol}{\contentsline {lstlisting}{\numberline {1.3}Задание 3}{3}{}\protected@file@percent }
\@writefile{toc}{\contentsline {section}{\numberline {1.4}Напишите рекурсивную функцию, которая умножает на заданное число-аргумент все числа из заданного списка-аргумента, когда a) все элементы списка -- числа, 6) элементы списка -- любые объекты.}{3}{}\protected@file@percent }
\@writefile{lol}{\contentsline {lstlisting}{\numberline {1.4}Задание 4}{3}{}\protected@file@percent }
\@writefile{toc}{\contentsline {section}{\numberline {1.5}Напишите функцию, select-between, которая из списка-аргумента, содержащего только числа, выбирает только те, которые расположены между двумя указанными границами-аргументами и возвращает их в виде списка (упорядоченного по возрастанию списка чисел.}{4}{}\protected@file@percent }
\@writefile{lol}{\contentsline {lstlisting}{\numberline {1.5}Задание 5}{4}{}\protected@file@percent }
\@writefile{toc}{\contentsline {section}{\numberline {1.6}Написать рекурсивную версию (с именем rec-add) вычисления суммы чисел заданного списка: а) одноуровнего смешанного, б) структурированного.}{5}{}\protected@file@percent }
\@writefile{lol}{\contentsline {lstlisting}{\numberline {1.6}Задание 6}{5}{}\protected@file@percent }
\@writefile{toc}{\contentsline {section}{\numberline {1.7}Написать рекурсивную версию с именем recnth функции nth.}{6}{}\protected@file@percent }
\@writefile{lol}{\contentsline {lstlisting}{\numberline {1.7}Задание 7}{6}{}\protected@file@percent }
\@writefile{toc}{\contentsline {section}{\numberline {1.8}Написать рекурсивную функцию allodd, которая возвращает t когда все элементы списка нечетные.}{6}{}\protected@file@percent }
\@writefile{lol}{\contentsline {lstlisting}{\numberline {1.8}Задание 8}{6}{}\protected@file@percent }
\@writefile{toc}{\contentsline {section}{\numberline {1.9}Написать рекурсивную функцию, которая возвращает первое нечетное число из списка (структурированного).}{7}{}\protected@file@percent }
\@writefile{lol}{\contentsline {lstlisting}{\numberline {1.9}Задание 9}{7}{}\protected@file@percent }
\@writefile{toc}{\contentsline {section}{\numberline {1.10}Используя cons-дополняемую рекурсию с одним тестом завершения, написать функцию которая получает как аргумент список чисел, а возвращает список квадратов этих чисел в том же порядке.}{7}{}\protected@file@percent }
\@writefile{lol}{\contentsline {lstlisting}{\numberline {1.10}Задание 10}{7}{}\protected@file@percent }
\@setckpt{02_practice}{
\setcounter{page}{8}
\setcounter{equation}{0}
\setcounter{enumi}{0}
\setcounter{enumii}{0}
\setcounter{enumiii}{0}
\setcounter{enumiv}{0}
\setcounter{footnote}{0}
\setcounter{mpfootnote}{0}
\setcounter{part}{0}
\setcounter{chapter}{1}
\setcounter{section}{10}
\setcounter{subsection}{0}
\setcounter{subsubsection}{0}
\setcounter{paragraph}{0}
\setcounter{subparagraph}{0}
\setcounter{figure}{0}
\setcounter{table}{0}
\setcounter{parentequation}{0}
\setcounter{autonum@counter}{0}
\setcounter{csvinputline}{0}
\setcounter{csvrow}{0}
\setcounter{csvcol}{0}
\setcounter{caption@flags}{0}
\setcounter{continuedfloat}{0}
\setcounter{float@type}{8}
\setcounter{AM@survey}{0}
\setcounter{lstnumber}{6}
\setcounter{lstlisting}{10}
}
